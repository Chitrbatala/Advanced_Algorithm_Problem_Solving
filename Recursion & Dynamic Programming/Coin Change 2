class Solution {
    public int change(int amount, int[] coins) {
        int[] dp = new int[amount + 1];
        
        dp[0] = 1;  // base case
        
        for (int coin : coins) {
            for (int amt = coin; amt <= amount; amt++) {
                dp[amt] += dp[amt - coin];
            }
        }
        
        return dp[amount];
    }
}




                // Recursive Approach
                // return solve(0, amount, coins);
                // }
                // private int solve(int i, int amount, int[] coins) {
                // if (amount == 0) return 1;
                // if (amount < 0 || i == coins.length) return 0;

                // int include = solve(i, amount - coins[i], coins);
                // int exclude = solve(i + 1, amount, coins);

                // return include + exclude;
