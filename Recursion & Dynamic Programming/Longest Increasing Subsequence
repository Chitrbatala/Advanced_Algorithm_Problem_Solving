class Solution {
    private int[][] dp;
    public int lengthOfLIS(int[] nums) {
        int n = nums.length;
        dp =  new int[n][n + 1];

        for (int i = 0; i < n; i++) {
            for (int j = 0; j < n; j++) {
                dp[i][j] = -1;
            }
        }
        return solve(nums, 0, -1);
    }
    private int solve(int[] nums, int i, int p) {
        if (i >= nums.length) return 0;
        int take = 0;

        if (dp[i][p + 1] != -1) return dp[i][p + 1];

        if (p == -1 || nums[p] < nums[i]) {
            take = 1 + solve(nums, i + 1, i);
        }
        int skip = solve(nums, i + 1, p);

        dp[i][p + 1] = Math.max(take, skip);
        return dp[i][p + 1];
    }
}
