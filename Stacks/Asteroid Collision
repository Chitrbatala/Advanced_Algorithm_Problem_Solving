class Solution {
    public int[] asteroidCollision(int[] asteroids) {
        Stack<Integer> stack = new Stack<>();

        for (int as : asteroids) {
            if (as > 0) {
                stack.push(as);
            } else {
                // While stack is not empty and top is a smaller positive asteroid
                while (!stack.isEmpty() && stack.peek() > 0 && stack.peek() < -as) {
                    stack.pop();
                }

                // If top is same size, destroy both
                if (!stack.isEmpty() && stack.peek() == -as) {
                    stack.pop();
                }
                // If stack is empty or top is negative, push current asteroid
                else if (stack.isEmpty() || stack.peek() < 0) {
                    stack.push(as);
                }
                // else, current asteroid is destroyed (do nothing)
            }
        }

        // Convert Stack to Array
        int[] result = new int[stack.size()];
        for (int i = result.length - 1; i >= 0; i--) {
            result[i] = stack.pop();
        }

        return result;
    }
}
