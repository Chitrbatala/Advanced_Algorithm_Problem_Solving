class Solution {
    public int[] finalPrices(int[] prices) {
       Stack<Integer> stack = new Stack<>();
       int n = prices.length;
       int[] answer = new int[n];

       for (int i = 0; i < n; i++) {
        answer[i] = prices[i];
        while (!stack.isEmpty() && prices[stack.peek()] >= prices[i]) {
            answer[stack.pop()] -= prices[i];
        }
        stack.push(i);
       }
       return answer;
    }
}

//  int n = prices.length;
//         int[] res = new int[n];

//         for (int i = 0; i < n; i++) {
//             res[i] = prices[i];

//             for (int j = i + 1; j < n; j++) {
//                 if (prices[j] <= prices[i]) {
//                     res[i] -= prices[j];
//                     break;
//                 }
//             }
//         }
//         return res;
